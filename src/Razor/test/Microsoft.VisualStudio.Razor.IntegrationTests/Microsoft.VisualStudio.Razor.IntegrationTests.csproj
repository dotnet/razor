<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>$(DefaultNetFxTargetFramework)</TargetFramework>
    <Nullable>enable</Nullable>
    <OutputType>Library</OutputType>
    <RootNamespace>Microsoft.VisualStudio.Razor.IntegrationTests</RootNamespace>

    <!-- Must use "dotnet test" to get blame-hang options -->
    <TestRunnerName>MSTest</TestRunnerName>
    <TestRunnerAdditionalArguments>"--blame-hang-dump-type:full" "--blame-hang-timeout:20m"</TestRunnerAdditionalArguments>
  </PropertyGroup>

  <ItemGroup>
    <None Include="xunit.runner.json" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\Microsoft.VisualStudio.RazorExtension.Dependencies\Microsoft.VisualStudio.RazorExtension.Dependencies.csproj" Private="false" ReferenceOutputAssembly="false" CopyVsix="true" />
    <ProjectReference Include="..\..\src\Microsoft.VisualStudio.RazorExtension\Microsoft.VisualStudio.RazorExtension.csproj" Private="false" ReferenceOutputAssembly="false" CopyVsix="true" />
    <ProjectReference Include="..\Microsoft.AspNetCore.Razor.Test.Common\Microsoft.AspNetCore.Razor.Test.Common.csproj" />
    <ProjectReference Include="..\Microsoft.VisualStudio.Editor.Razor.Test.Common\Microsoft.VisualStudio.Editor.Razor.Test.Common.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudio.Editor" Version="$(MicrosoftVisualStudioEditorPackageVersion)" />
    <PackageReference Include="Microsoft.VisualStudio.Extensibility.Testing.Xunit" Version="$(MicrosoftVisualStudioExtensibilityTestingXunitVersion)" />
    <PackageReference Include="Microsoft.VisualStudio.Extensibility.Testing.SourceGenerator" Version="$(MicrosoftVisualStudioExtensibilityTestingSourceGeneratorVersion)" />
    <PackageReference Include="Microsoft.VisualStudio.Language.Intellisense" Version="$(MicrosoftVisualStudioLanguageIntellisensePackageVersion)" />
    <PackageReference Include="NuGet.SolutionRestoreManager.Interop" Version="$(NuGetSolutionRestoreManagerInteropVersion)" />
    <PackageReference Include="Microsoft.Internal.VisualStudio.Shell.Framework" Version="$(MicrosoftInternalVisualStudioShellFrameworkPackageVersion)" />
    <PackageReference Include="xunit" Version="$(XunitVersion)" />
    <PackageReference Include="xunit.runner.console" Version="$(XunitVersion)" />
    <PackageReference Include="xunit.runner.visualstudio" Version="$(XunitVersion)" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="**\TestFiles\**\*" />
  </ItemGroup>

  <ItemGroup>
    <!-- Microsoft.VisualStudio.RazorExtension.vsix cannot be installed without elevation due to a bug in the experimental extension installation logic. -->
    <!--<AssemblyAttribute Include="Xunit.Harness.RequireExtensionAttribute">
      <_Parameter1>Microsoft.VisualStudio.RazorExtension.vsix</_Parameter1>
    </AssemblyAttribute>-->
    <AssemblyAttribute Include="Xunit.Harness.RequireExtensionAttribute">
      <_Parameter1>Microsoft.VisualStudio.RazorExtension.Dependencies.vsix</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

  <Target Name="PrepareVsixProjectReferences"
          BeforeTargets="ResolveProjectReferences"
          DependsOnTargets="PrepareProjectReferences">
    <MSBuild
      Projects="@(_MSBuildProjectReferenceExistent)"
      Targets="VSIXContainerProjectOutputGroup"
      BuildInParallel="$(BuildInParallel)"
      Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform); %(_MSBuildProjectReferenceExistent.SetTargetFramework); CreateVsixContainer=true"
      Condition="'%(_MSBuildProjectReferenceExistent.CopyVsix)' == 'true'"
      ContinueOnError="!$(BuildingProject)"
      RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)">

      <Output TaskParameter="TargetOutputs" ItemName="_ProjectReferenceVsixOutputs" />
    </MSBuild>

    <ItemGroup>
      <ReferenceCopyLocalPaths Include="@(_ProjectReferenceVsixOutputs)" />
    </ItemGroup>
  </Target>

</Project>
