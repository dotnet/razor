<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
    <Description>Razor is a markup syntax for adding server-side logic to web pages. This package contains the Visual Studio Live Share Razor infrastructure.</Description>
    <EnableApiCheck>false</EnableApiCheck>
    <IsShippingPackage>false</IsShippingPackage>
    <ExcludeFromSourceBuild>true</ExcludeFromSourceBuild>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\Microsoft.CodeAnalysis.Remote.Razor\Serialization\*.cs">
      <Link>Serialization\%(FileName)%(Extension)</Link>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Microsoft.VisualStudio.Editor.Razor\Microsoft.VisualStudio.Editor.Razor.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudio.LiveShare" Version="$(MicrosoftVisualStudioLiveSharePackageVersion)" />
    <PackageReference Include="Microsoft.VisualStudio.Shell.15.0" Version="$(MicrosoftVisualStudioShell150PackageVersion)" />

    <!--
      Pinning packages to avoid misaligned reference CI failures.
      CI builds here: https://github.com/dotnet/razor-tooling/issues/4327
      Now we aren't sure why this exposes a "flaky" issue; however, to workaround the break we pin the following packages to workaround the issue.
    -->
    <PackageReference Include="Microsoft.VisualStudio.RpcContracts" Version="$(MicrosoftVisualStudioRpcContractsPackageVersion)" />
    <PackageReference Include="Microsoft.VisualStudio.LanguageServices" Version="$(Tooling_MicrosoftVisualStudioLanguageServicesPackageVersion)" />
    <PackageReference Include="StreamJsonRpc" Version="$(StreamJsonRpcPackageVersion)" />
    <PackageReference Include="Nerdbank.Streams" Version="$(NerdbankStreamsPackageVersion)" />
  </ItemGroup>

</Project>
