#nullable enable
abstract Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpDocumentProcessedListener.DocumentProcessed(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument! codeDocument, Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpDocumentSnapshot! document) -> void
abstract Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpDocumentProcessedListener.Initialize(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager! projectManager) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpBackgroundDocumentGenerator
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpBackgroundDocumentGenerator.Initialize(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager! projectManager) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpBackgroundDocumentGenerator.OmniSharpBackgroundDocumentGenerator(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManagerDispatcher! projectSnapshotManagerDispatcher, Microsoft.AspNetCore.Razor.LanguageServer.Common.RemoteTextLoaderFactory! remoteTextLoaderFactory, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpDocumentProcessedListener!>! documentProcessedListeners) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpDocumentProcessedListener
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpDocumentProcessedListener.OmniSharpDocumentProcessedListener() -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpDocumentSnapshot
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpDocumentSnapshot.FileKind.get -> string?
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpDocumentSnapshot.FilePath.get -> string?
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpDocumentSnapshot.HostDocument.get -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocument!
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpDocumentSnapshot.Project.get -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot!
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocument
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocument.FilePath.get -> string!
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocument.OmniSharpHostDocument(string! filePath, string! targetPath, string! kind) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocumentComparer
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocumentComparer.Equals(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocument? x, Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocument? y) -> bool
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocumentComparer.GetHashCode(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocument! hostDocument) -> int
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Extensions.OmniSharpRazorCodeDocumentExtensions
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.FallbackRazorConfiguration
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.FallbackRazorConfiguration.FallbackRazorConfiguration() -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.OmniSharpLanguageServerFeatureOptions
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.OmniSharpLanguageServerFeatureOptions.OmniSharpLanguageServerFeatureOptions() -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.IOmniSharpProjectSnapshotManagerChangeTrigger
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.IOmniSharpProjectSnapshotManagerChangeTrigger.Initialize(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager! projectManager) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpHostProject
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpHostProject.Key.get -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectKey!
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpHostProject.OmniSharpHostProject(string! projectFilePath, Microsoft.AspNetCore.Razor.Language.RazorConfiguration! razorConfiguration, string! rootNamespace) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeEventArgs
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeEventArgs.DocumentFilePath.get -> string?
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeEventArgs.Kind.get -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeKind
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeEventArgs.Newer.get -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot?
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeEventArgs.Older.get -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot?
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeEventArgs.OmniSharpProjectChangeEventArgs(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot? older, Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot? newer, string? documentFilePath, Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeKind kind) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeKind
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeKind.DocumentAdded = 3 -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeKind
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeKind.DocumentRemoved = 4 -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeKind
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeKind.ProjectAdded = 0 -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeKind
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeKind.ProjectChanged = 2 -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeKind
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeKind.ProjectRemoved = 1 -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeKind
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectKey
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot.DocumentFilePaths.get -> System.Collections.Generic.IEnumerable<string!>!
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot.FilePath.get -> string!
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot.GetDocument(string! filePath) -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpDocumentSnapshot?
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot.Key.get -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectKey!
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot.ProjectWorkspaceState.get -> Microsoft.AspNetCore.Razor.ProjectSystem.ProjectWorkspaceState?
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot.Serialize(string! publishFilePath, Newtonsoft.Json.JsonSerializer! serializer, System.IO.StreamWriter! writer) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager.Changed -> System.EventHandler<Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectChangeEventArgs!>?
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager.DocumentAdded(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpHostProject! hostProject, Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocument! hostDocument) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager.DocumentChanged(string! projectFilePath, string! documentFilePath) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager.DocumentRemoved(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpHostProject! hostProject, Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocument! hostDocument) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager.GetAllProjectKeys(string! projectFilePath) -> System.Collections.Immutable.ImmutableArray<Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectKey!>
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager.GetLoadedProject(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectKey! projectKey) -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot!
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager.ProjectAdded(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpHostProject! hostProject) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager.ProjectConfigurationChanged(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpHostProject! hostProject) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager.Projects.get -> System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot!>!
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManagerAccessor
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManagerAccessor.Instance.get -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager!
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManagerAccessor.OmniSharpProjectSnapshotManagerAccessor(Microsoft.AspNetCore.Razor.LanguageServer.Common.RemoteTextLoaderFactory! remoteTextLoaderFactory, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.IOmniSharpProjectSnapshotManagerChangeTrigger!>! projectChangeTriggers, Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManagerDispatcher! projectSnapshotManagerDispatcher, Microsoft.CodeAnalysis.Workspace! workspace) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManagerDispatcher
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManagerDispatcher.AssertDispatcherThread(string? caller = null) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManagerDispatcher.DispatcherScheduler.get -> System.Threading.Tasks.TaskScheduler!
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManagerDispatcher.OmniSharpProjectSnapshotManagerDispatcher() -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManagerDispatcher.RunOnDispatcherThreadAsync(System.Action! action, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectWorkspaceStateGenerator
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectWorkspaceStateGenerator.Initialize(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager! projectManager) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectWorkspaceStateGenerator.OmniSharpProjectWorkspaceStateGenerator(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManagerDispatcher! projectSnapshotManagerDispatcher) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpWorkspaceProjectStateChangeDetector
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpWorkspaceProjectStateChangeDetector.Initialize(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManager! projectManager) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpWorkspaceProjectStateChangeDetector.OmniSharpWorkspaceProjectStateChangeDetector(Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshotManagerDispatcher! projectSnapshotManagerDispatcher, Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectWorkspaceStateGenerator! workspaceStateGenerator, Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.OmniSharpLanguageServerFeatureOptions! languageServerFeatureOptions) -> void
Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Serialization.JsonConverterCollectionExtensions
static Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Extensions.OmniSharpRazorCodeDocumentExtensions.GetInternalCSharpSourceText(this Microsoft.AspNetCore.Razor.Language.RazorCodeDocument! codeDocument) -> Microsoft.CodeAnalysis.Text.SourceText!
static Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.FallbackRazorConfiguration.SelectConfiguration(System.Version! version) -> Microsoft.AspNetCore.Razor.Language.RazorConfiguration!
static Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectKey.From(Microsoft.CodeAnalysis.Project! workspaceProject) -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectKey?
static Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Serialization.JsonConverterCollectionExtensions.RegisterOmniSharpRazorConverters(this Newtonsoft.Json.JsonConverterCollection! collection) -> void
static readonly Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocumentComparer.Instance -> Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Document.OmniSharpHostDocumentComparer!
virtual Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectWorkspaceStateGenerator.Update(Microsoft.CodeAnalysis.Project! workspaceProject, Microsoft.AspNetCore.Razor.ExternalAccess.OmniSharp.Project.OmniSharpProjectSnapshot! projectSnapshot) -> void