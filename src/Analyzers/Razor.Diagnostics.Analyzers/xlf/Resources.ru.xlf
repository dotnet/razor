<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ru" original="../Resources.resx">
    <body>
      <trans-unit id="IRemoteJsonServiceParameterDescription">
        <source>Methods in interfaces inheriting from IRemoteJsonService should not have parameters of type RazorPinnedSolutionInfoWrapper or DocumentId as they are not Json serializable.</source>
        <target state="translated">Методы в интерфейсах, наследуемых от IRemoteJsonService, не должны иметь параметров типа RazorPinnedSolutionInfoWrapper или DocumentId, поскольку они не являются Json-сериализуемыми.</target>
        <note />
      </trans-unit>
      <trans-unit id="IRemoteJsonServiceParameterMessage">
        <source>'{0}' parameter in '{1}.{2}' has a parameter of type '{3}' which is not allowed in a Json service</source>
        <target state="translated">Параметр «{0}» в «{1}.{2}» имеет параметр тип «{3}», который недопустим в службе JSON</target>
        <note />
      </trans-unit>
      <trans-unit id="IRemoteJsonServiceParameterTitle">
        <source>Invalid parameter type in IRemoteJsonService method</source>
        <target state="translated">Недопустимый тип параметра в методе IRemoteJsonService</target>
        <note />
      </trans-unit>
      <trans-unit id="ImmutableArrayBoxingDescription">
        <source>Calling EnumerableExtensions or ReadOnlyListExtensions methods on ImmutableArray&lt;T&gt; causes the struct to be boxed, which creates unnecessary allocations. Use the corresponding ImmutableArray&lt;T&gt; extension methods instead.</source>
        <target state="translated">Вызов методов EnumerableExtensions или ReadOnlyListExtensions в ImmutableArray&lt;T&gt; приводит к упаковке структуры, что создает ненужные выделения. Вместо этого используйте соответствующие методы расширения ImmutableArray&lt;T&gt;.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImmutableArrayBoxingMessage">
        <source>Call to '{0}' on ImmutableArray&lt;T&gt; causes boxing. Consider using the ImmutableArray&lt;T&gt; extension method instead.</source>
        <target state="translated">Вызов "{0}" в ImmutableArray&lt;T&gt; приводит к упаковке. Вместо этого рассмотрите возможность использовать метод расширения ImmutableArray&lt;T&gt;.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImmutableArrayBoxingTitle">
        <source>ImmutableArray&lt;T&gt; is being boxed to IReadOnlyList&lt;T&gt;</source>
        <target state="translated">ImmutableArray&lt;T&gt; упаковывается в IReadOnlyList&lt;T&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="PooledArrayBuilderAsRefDescription">
        <source>Instance of PooledArrayBuilder&lt;T&gt;.AsRef() must be a 'using' variable.</source>
        <target state="translated">Экземпляр PooledArrayBuilder&lt;T&gt;.AsRef() должен представлять собой переменную "using".</target>
        <note>An optional longer localizable description of the diagnostic.</note>
      </trans-unit>
      <trans-unit id="PooledArrayBuilderAsRefMessage">
        <source>Instance of PooledArrayBuilder&lt;T&gt;.AsRef() must be a 'using' variable</source>
        <target state="translated">Экземпляр PooledArrayBuilder&lt;T&gt;.AsRef() должен представлять собой переменную "using"</target>
        <note>The format-able message the diagnostic displays.</note>
      </trans-unit>
      <trans-unit id="PooledArrayBuilderAsRefTitle">
        <source>Instance of PooledArrayBuilder&lt;T&gt;.AsRef() must be a 'using' variable</source>
        <target state="translated">Экземпляр PooledArrayBuilder&lt;T&gt;.AsRef() должен представлять собой переменную "using"</target>
        <note>The title of the diagnostic.</note>
      </trans-unit>
    </body>
  </file>
</xliff>