#nullable enable
*REMOVED*Microsoft.AspNetCore.Razor.Language.RequiredAttributeDescriptorBuilderExtensions
abstract Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeRenderingContext.AddSourceMappingFor(Microsoft.AspNetCore.Razor.Language.SourceSpan node) -> void
abstract Microsoft.AspNetCore.Razor.Language.MetadataCollection.ComputeHashCode() -> int
abstract Microsoft.AspNetCore.Razor.Language.MetadataCollection.ContainsKey(string! key) -> bool
abstract Microsoft.AspNetCore.Razor.Language.MetadataCollection.Count.get -> int
abstract Microsoft.AspNetCore.Razor.Language.MetadataCollection.Equals(Microsoft.AspNetCore.Razor.Language.MetadataCollection! other) -> bool
abstract Microsoft.AspNetCore.Razor.Language.MetadataCollection.GetEntry(int index) -> System.Collections.Generic.KeyValuePair<string!, string?>
abstract Microsoft.AspNetCore.Razor.Language.MetadataCollection.Keys.get -> System.Collections.Generic.IEnumerable<string!>!
abstract Microsoft.AspNetCore.Razor.Language.MetadataCollection.this[string! key].get -> string?
abstract Microsoft.AspNetCore.Razor.Language.MetadataCollection.TryGetValue(string! key, out string? value) -> bool
abstract Microsoft.AspNetCore.Razor.Language.MetadataCollection.Values.get -> System.Collections.Generic.IEnumerable<string?>!
Microsoft.AspNetCore.Razor.Language.BoundAttributeDescriptor.IsDirectiveAttribute.get -> bool
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.CodeWriter(string! newLine, Microsoft.AspNetCore.Razor.Language.RazorCodeGenerationOptions! options) -> void
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.GenerateCode() -> string!
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.Indent(int size) -> Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter!
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.LastChar.get -> char?
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.NewLine.get -> string!
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.NewLine.set -> void
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.Write(ref Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.WriteInterpolatedStringHandler handler) -> Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter!
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.Write(string! value) -> Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter!
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.Write(string! value, int startIndex, int count) -> Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter!
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.Write(System.ReadOnlyMemory<char> value) -> Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter!
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.WriteInterpolatedStringHandler
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.WriteInterpolatedStringHandler.AppendFormatted(string? value) -> void
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.WriteInterpolatedStringHandler.AppendFormatted(System.ReadOnlyMemory<char> value) -> void
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.WriteInterpolatedStringHandler.AppendFormatted<T>(T value) -> void
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.WriteInterpolatedStringHandler.AppendLiteral(string! value) -> void
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.WriteInterpolatedStringHandler.WriteInterpolatedStringHandler() -> void
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.WriteInterpolatedStringHandler.WriteInterpolatedStringHandler(int literalLength, int formattedCount, Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter! writer) -> void
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.WriteLine() -> Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter!
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.WriteLine(ref Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.WriteInterpolatedStringHandler handler) -> Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter!
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.WriteLine(string! value) -> Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter!
Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter.WriteLine(System.ReadOnlyMemory<char> value) -> Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeWriter!
Microsoft.AspNetCore.Razor.Language.CodeGeneration.LinePragma.LinePragma() -> void
Microsoft.AspNetCore.Razor.Language.CommonMetadata
Microsoft.AspNetCore.Razor.Language.DirectiveTokenKind.IdentifierOrExpression = 7 -> Microsoft.AspNetCore.Razor.Language.DirectiveTokenKind
Microsoft.AspNetCore.Razor.Language.Intermediate.FormNameIntermediateNode
Microsoft.AspNetCore.Razor.Language.Intermediate.FormNameIntermediateNode.FormNameIntermediateNode() -> void
Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeCollection.Enumerator.Enumerator() -> void
Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeReference.IntermediateNodeReference() -> void
Microsoft.AspNetCore.Razor.Language.Intermediate.RenderModeIntermediateNode
Microsoft.AspNetCore.Razor.Language.Intermediate.RenderModeIntermediateNode.RenderModeIntermediateNode() -> void
Microsoft.AspNetCore.Razor.Language.Intermediate.TypeParameter.ConstraintsSource.get -> Microsoft.AspNetCore.Razor.Language.SourceSpan?
Microsoft.AspNetCore.Razor.Language.Intermediate.TypeParameter.ConstraintsSource.init -> void
Microsoft.AspNetCore.Razor.Language.Intermediate.TypeParameter.ParameterNameSource.get -> Microsoft.AspNetCore.Razor.Language.SourceSpan?
Microsoft.AspNetCore.Razor.Language.Intermediate.TypeParameter.ParameterNameSource.init -> void
Microsoft.AspNetCore.Razor.Language.MetadataCollection
Microsoft.AspNetCore.Razor.Language.MetadataCollection.Enumerator
Microsoft.AspNetCore.Razor.Language.MetadataCollection.Enumerator.Current.get -> System.Collections.Generic.KeyValuePair<string!, string?>
Microsoft.AspNetCore.Razor.Language.MetadataCollection.Enumerator.Dispose() -> void
Microsoft.AspNetCore.Razor.Language.MetadataCollection.Enumerator.Enumerator() -> void
Microsoft.AspNetCore.Razor.Language.MetadataCollection.Enumerator.MoveNext() -> bool
Microsoft.AspNetCore.Razor.Language.MetadataCollection.Enumerator.Reset() -> void
Microsoft.AspNetCore.Razor.Language.MetadataCollection.GetEnumerator() -> Microsoft.AspNetCore.Razor.Language.MetadataCollection.Enumerator
Microsoft.AspNetCore.Razor.Language.MetadataCollection.MetadataCollection() -> void
Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.Enumerator.Enumerator() -> void
Microsoft.AspNetCore.Razor.Language.SourceLocation.SourceLocation() -> void
Microsoft.AspNetCore.Razor.Language.SourceSpan.SourceSpan() -> void
Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder.PooledBuilder
Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder.PooledBuilder.Dispose() -> void
Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder.PooledBuilder.PooledBuilder() -> void
override Microsoft.AspNetCore.Razor.Language.Intermediate.FormNameIntermediateNode.Accept(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor! visitor) -> void
override Microsoft.AspNetCore.Razor.Language.Intermediate.FormNameIntermediateNode.Children.get -> Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeCollection!
override Microsoft.AspNetCore.Razor.Language.Intermediate.FormNameIntermediateNode.FormatNode(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeFormatter! formatter) -> void
override Microsoft.AspNetCore.Razor.Language.Intermediate.RenderModeIntermediateNode.Accept(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor! visitor) -> void
override Microsoft.AspNetCore.Razor.Language.Intermediate.RenderModeIntermediateNode.Children.get -> Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeCollection!
override sealed Microsoft.AspNetCore.Razor.Language.MetadataCollection.Equals(object! obj) -> bool
override sealed Microsoft.AspNetCore.Razor.Language.MetadataCollection.GetHashCode() -> int
static Microsoft.AspNetCore.Razor.Language.CommonMetadata.PropertyName(string! value) -> System.Collections.Generic.KeyValuePair<string!, string?>
static Microsoft.AspNetCore.Razor.Language.CommonMetadata.TypeName(string! value) -> System.Collections.Generic.KeyValuePair<string!, string?>
static Microsoft.AspNetCore.Razor.Language.MetadataCollection.Create(params System.Collections.Generic.KeyValuePair<string!, string?>[]! pairs) -> Microsoft.AspNetCore.Razor.Language.MetadataCollection!
static Microsoft.AspNetCore.Razor.Language.MetadataCollection.Create(System.Collections.Generic.Dictionary<string!, string?>! map) -> Microsoft.AspNetCore.Razor.Language.MetadataCollection!
static Microsoft.AspNetCore.Razor.Language.MetadataCollection.Create(System.Collections.Generic.IReadOnlyDictionary<string!, string?>! map) -> Microsoft.AspNetCore.Razor.Language.MetadataCollection!
static Microsoft.AspNetCore.Razor.Language.MetadataCollection.Create(System.Collections.Generic.KeyValuePair<string!, string?> pair) -> Microsoft.AspNetCore.Razor.Language.MetadataCollection!
static Microsoft.AspNetCore.Razor.Language.MetadataCollection.Create(System.Collections.Generic.KeyValuePair<string!, string?> pair1, System.Collections.Generic.KeyValuePair<string!, string?> pair2) -> Microsoft.AspNetCore.Razor.Language.MetadataCollection!
static Microsoft.AspNetCore.Razor.Language.MetadataCollection.Create(System.Collections.Generic.KeyValuePair<string!, string?> pair1, System.Collections.Generic.KeyValuePair<string!, string?> pair2, System.Collections.Generic.KeyValuePair<string!, string?> pair3) -> Microsoft.AspNetCore.Razor.Language.MetadataCollection!
static Microsoft.AspNetCore.Razor.Language.MetadataCollection.Create<T>(T pairs) -> Microsoft.AspNetCore.Razor.Language.MetadataCollection!
static Microsoft.AspNetCore.Razor.Language.MetadataCollection.CreateOrEmpty(System.Collections.Generic.Dictionary<string!, string?>? map) -> Microsoft.AspNetCore.Razor.Language.MetadataCollection!
static Microsoft.AspNetCore.Razor.Language.MetadataCollection.CreateOrEmpty(System.Collections.Generic.IReadOnlyDictionary<string!, string?>? map) -> Microsoft.AspNetCore.Razor.Language.MetadataCollection!
static Microsoft.AspNetCore.Razor.Language.MetadataCollection.CreateOrEmpty<T>(T? pairs) -> Microsoft.AspNetCore.Razor.Language.MetadataCollection!
static Microsoft.AspNetCore.Razor.Language.RazorCodeDocumentExtensions.TryComputeClassName(this Microsoft.AspNetCore.Razor.Language.RazorCodeDocument! codeDocument, out string? className) -> bool
static readonly Microsoft.AspNetCore.Razor.Language.MetadataCollection.Empty -> Microsoft.AspNetCore.Razor.Language.MetadataCollection!
virtual Microsoft.AspNetCore.Razor.Language.BoundAttributeDescriptorBuilder.SetMetadata(Microsoft.AspNetCore.Razor.Language.MetadataCollection! metadata) -> void
virtual Microsoft.AspNetCore.Razor.Language.BoundAttributeDescriptorBuilder.TryGetMetadataValue(string! key, out string? value) -> bool
virtual Microsoft.AspNetCore.Razor.Language.BoundAttributeParameterDescriptorBuilder.SetMetadata(Microsoft.AspNetCore.Razor.Language.MetadataCollection! metadata) -> void
virtual Microsoft.AspNetCore.Razor.Language.BoundAttributeParameterDescriptorBuilder.TryGetMetadataValue(string! key, out string? value) -> bool
virtual Microsoft.AspNetCore.Razor.Language.RequiredAttributeDescriptorBuilder.SetMetadata(Microsoft.AspNetCore.Razor.Language.MetadataCollection! metadata) -> void
virtual Microsoft.AspNetCore.Razor.Language.RequiredAttributeDescriptorBuilder.TryGetMetadataValue(string! key, out string? value) -> bool
virtual Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder.SetMetadata(Microsoft.AspNetCore.Razor.Language.MetadataCollection! metadata) -> void
virtual Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder.TryGetMetadataValue(string! key, out string? value) -> bool
~abstract Microsoft.AspNetCore.Razor.Language.RazorCSharpDocument.CodeDocument.get -> Microsoft.AspNetCore.Razor.Language.RazorCodeDocument
~static Microsoft.AspNetCore.Razor.Language.BoundAttributeDescriptorBuilderExtensions.SetBindAttributeGetSet(this Microsoft.AspNetCore.Razor.Language.BoundAttributeParameterDescriptorBuilder builder) -> void
~static Microsoft.AspNetCore.Razor.Language.BoundAttributeDescriptorBuilderExtensions.SetGloballyQualifiedTypeName(this Microsoft.AspNetCore.Razor.Language.BoundAttributeDescriptorBuilder builder, string globallyQualifiedTypeName) -> void
~static Microsoft.AspNetCore.Razor.Language.BoundAttributeDescriptorBuilderExtensions.SetMetadata(this Microsoft.AspNetCore.Razor.Language.BoundAttributeDescriptorBuilder builder, System.Collections.Generic.KeyValuePair<string, string> pair) -> void
~static Microsoft.AspNetCore.Razor.Language.BoundAttributeDescriptorExtensions.GetGloballyQualifiedTypeName(this Microsoft.AspNetCore.Razor.Language.BoundAttributeDescriptor attribute) -> string
~static Microsoft.AspNetCore.Razor.Language.DirectiveDescriptorBuilderExtensions.AddIdentifierOrExpression(this Microsoft.AspNetCore.Razor.Language.IDirectiveDescriptorBuilder builder, string name, string description) -> Microsoft.AspNetCore.Razor.Language.IDirectiveDescriptorBuilder
~static Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeExtensions.IsDesignTimePropertyAccessHelper(this Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode tagHelper) -> bool
~static Microsoft.AspNetCore.Razor.Language.RazorCodeDocumentExtensions.GetPreTagHelperSyntaxTree(this Microsoft.AspNetCore.Razor.Language.RazorCodeDocument document) -> Microsoft.AspNetCore.Razor.Language.RazorSyntaxTree
~static Microsoft.AspNetCore.Razor.Language.RazorCodeDocumentExtensions.SetPreTagHelperSyntaxTree(this Microsoft.AspNetCore.Razor.Language.RazorCodeDocument document, Microsoft.AspNetCore.Razor.Language.RazorSyntaxTree syntaxTree) -> void
~static Microsoft.AspNetCore.Razor.Language.RazorCSharpDocument.Create(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument codeDocument, string generatedCode, Microsoft.AspNetCore.Razor.Language.RazorCodeGenerationOptions options, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Language.RazorDiagnostic> diagnostics) -> Microsoft.AspNetCore.Razor.Language.RazorCSharpDocument
~static Microsoft.AspNetCore.Razor.Language.RazorCSharpDocument.Create(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument codeDocument, string generatedCode, Microsoft.AspNetCore.Razor.Language.RazorCodeGenerationOptions options, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Language.RazorDiagnostic> diagnostics, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Language.SourceMapping> sourceMappings, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Language.CodeGeneration.LinePragma> linePragmas) -> Microsoft.AspNetCore.Razor.Language.RazorCSharpDocument
~static Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder.GetPooledInstance(string kind, string name, string assemblyName, out Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder builder) -> Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder.PooledBuilder
~static Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder.GetPooledInstance(string name, string assemblyName, out Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder builder) -> Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder.PooledBuilder
~static Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilderExtensions.SetMetadata(this Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder builder, System.Collections.Generic.KeyValuePair<string, string> pair) -> void
~static Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilderExtensions.SetMetadata(this Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder builder, System.Collections.Generic.KeyValuePair<string, string> pair1, System.Collections.Generic.KeyValuePair<string, string> pair2) -> void
~static Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilderExtensions.SetTypeNameIdentifier(this Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder builder, string typeNameIdentifier) -> void
~static Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilderExtensions.SetTypeNamespace(this Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorBuilder builder, string typeNamespace) -> void
~static Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorExtensions.GetTypeNameIdentifier(this Microsoft.AspNetCore.Razor.Language.TagHelperDescriptor tagHelper) -> string
~static Microsoft.AspNetCore.Razor.Language.TagHelperDescriptorExtensions.GetTypeNamespace(this Microsoft.AspNetCore.Razor.Language.TagHelperDescriptor tagHelper) -> string
~static readonly Microsoft.AspNetCore.Razor.Language.Intermediate.CommonAnnotations.NullableContext -> object
~static readonly Microsoft.AspNetCore.Razor.Language.RazorLanguageVersion.Version_7_0 -> Microsoft.AspNetCore.Razor.Language.RazorLanguageVersion
~static readonly Microsoft.AspNetCore.Razor.Language.RazorLanguageVersion.Version_8_0 -> Microsoft.AspNetCore.Razor.Language.RazorLanguageVersion
~static readonly Microsoft.AspNetCore.Razor.Language.TagHelperMetadata.Common.GloballyQualifiedTypeName -> string
~static readonly Microsoft.AspNetCore.Razor.Language.TagHelperMetadata.Common.TypeNameIdentifier -> string
~static readonly Microsoft.AspNetCore.Razor.Language.TagHelperMetadata.Common.TypeNamespace -> string
~virtual Microsoft.AspNetCore.Razor.Language.CodeGeneration.IntermediateNodeWriter.WriteFormName(Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeRenderingContext context, Microsoft.AspNetCore.Razor.Language.Intermediate.FormNameIntermediateNode node) -> void
~virtual Microsoft.AspNetCore.Razor.Language.CodeGeneration.IntermediateNodeWriter.WriteRenderMode(Microsoft.AspNetCore.Razor.Language.CodeGeneration.CodeRenderingContext context, Microsoft.AspNetCore.Razor.Language.Intermediate.RenderModeIntermediateNode node) -> void
~virtual Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor.VisitFormName(Microsoft.AspNetCore.Razor.Language.Intermediate.FormNameIntermediateNode node) -> void
~virtual Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeVisitor.VisitRenderMode(Microsoft.AspNetCore.Razor.Language.Intermediate.RenderModeIntermediateNode node) -> void
