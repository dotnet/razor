<?xml version="1.0" encoding="utf-8"?>
<Project>
  <Import Project="Sdk.targets" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <PropertyGroup>
    <PackageVersion Condition=" '$(PackageVersion)' == '' ">$(Version)</PackageVersion>
  </PropertyGroup>

  <Import Project="eng\MPack.targets" />
  <Import Project="eng\targets\Packaging.targets" />
  <Import Project="eng\targets\Npm.Common.targets"  Condition="'$(MSBuildProjectExtension)' == '.npmproj'" />

  <!-- Workaround https://github.com/dotnet/cli/issues/10528 -->
  <PropertyGroup>
    <BundledNETCorePlatformsPackageVersion>$(MicrosoftNETCorePlatformsPackageVersion)</BundledNETCorePlatformsPackageVersion>
  </PropertyGroup>

  <ItemGroup>
    <!-- Reference base shared framework at incoming dependency flow version, not bundled sdk version. -->
    <KnownFrameworkReference Update="Microsoft.NETCore.App">
      <!-- Always update the 'latest version', whether the repo is servicing or not. -->
      <LatestRuntimeFrameworkVersion Condition="'%(TargetFramework)' == '$(DefaultNetCoreTargetFramework)'">$(MicrosoftNETCoreAppRuntimeVersion)</LatestRuntimeFrameworkVersion>
      <!-- Only update the default runtime version for preview builds. -->
      <DefaultRuntimeFrameworkVersion Condition="'%(TargetFramework)' == '$(DefaultNetCoreTargetFramework)' and '$(IsServicingBuild)' != 'true'">$(MicrosoftNETCoreAppRuntimeVersion)</DefaultRuntimeFrameworkVersion>
      <!-- Only update the targeting pack version for preview builds. -->
      <TargetingPackVersion Condition="'%(TargetFramework)' == '$(DefaultNetCoreTargetFramework)' and '$(IsServicingBuild)' != 'true'">$(MicrosoftNETCoreAppRefPackageVersion)</TargetingPackVersion>
    </KnownFrameworkReference>

    <!-- Remove unneeded reference to AspNetCore.App -->
    <KnownFrameworkReference Remove="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <!-- Global Analyzer Config -->
  <ItemGroup>
    <!-- Always include Common.globalconfig -->
    <EditorConfigFiles Include="$(RepositoryEngineeringDir)config\globalconfigs\Common.globalconfig" />
    <!-- Include Shipping.globalconfig for shipping projects -->
    <EditorConfigFiles Condition="'$(IsShipping)' == 'true'" Include="$(RepositoryEngineeringDir)config\globalconfigs\Shipping.globalconfig" />
    <!-- Include NonShipping.globalconfig for non-shipping projects, except for API shims -->
    <EditorConfigFiles Condition="'$(IsShipping)' != 'true' AND '$(IsApiShim)' != 'true'" Include="$(RepositoryEngineeringDir)config\globalconfigs\NonShipping.globalconfig" />
    <!-- Include ApiShim.globalconfig for API shim projects -->
    <EditorConfigFiles Condition="'$(IsApiShim)' == 'true'" Include="$(RepositoryEngineeringDir)config\globalconfigs\ApiShim.globalconfig" />
  </ItemGroup>

  <!--
    Where necessary, do not pretend we support iOS or Android. This file is imported after project
    has a chance to set $(RemoveDevicePlatformSupport) and long after @(SupportedPlatforms) is initialized.
  -->
  <ItemGroup Condition=" '$(RemoveDevicePlatformSupport)' == 'true' ">
    <SupportedPlatform Remove="Android" />
    <SupportedPlatform Remove="iOS" />
  </ItemGroup>

  <Target Name="GetCustomAssemblyAttributes"
          BeforeTargets="GetAssemblyAttributes"
          Condition=" '$(MSBuildProjectExtension)' == '.csproj' "
          DependsOnTargets="InitializeSourceControlInformation">
    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute" Condition="'$(Serviceable)' == 'true'">
        <_Parameter1>Serviceable</_Parameter1>
        <_Parameter2>True</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>
</Project>
